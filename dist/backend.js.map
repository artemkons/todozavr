{"version":3,"sources":["webpack://todozavr/./src/server/models/todo.js","webpack://todozavr/./src/server/resolvers/root.js","webpack://todozavr/./src/server/schema/schema.js","webpack://todozavr/external \"express\"","webpack://todozavr/external \"express-graphql\"","webpack://todozavr/external \"graphql\"","webpack://todozavr/external \"mongoose\"","webpack://todozavr/webpack/bootstrap","webpack://todozavr/webpack/runtime/compat get default export","webpack://todozavr/webpack/runtime/define property getters","webpack://todozavr/webpack/runtime/hasOwnProperty shorthand","webpack://todozavr/webpack/runtime/make namespace object","webpack://todozavr/./src/server/app.js"],"names":["todoSchema","Schema","title","String","text","mongoose","root","allTodos","Todos","todo","id","addTodo","save","deleteTodo","editTodo","schema","buildSchema","URL","useNewUrlParser","useUnifiedTopology","useFindAndModify","dbConnection","on","err","console","log","once","app","express","PORT","get","req","res","send","use","graphqlHTTP","rootValue","graphiql","listen"],"mappings":"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","file":"backend.js","sourcesContent":["import mongoose from \"mongoose\";\nimport { Schema } from \"mongoose\";\n\nconst todoSchema = new Schema({\n  title: String,\n  text: String,\n});\n\nexport default mongoose.model(\"Todo\", todoSchema);\n","import Todos from \"../models/todo\";\n\nvar root = {\n  allTodos: async () => {\n    return await Todos.find({});\n  },\n  todo: async ({ id }) => {\n    return await Todos.findById(id);\n  },\n  addTodo: async ({ title, text }) => {\n    const todo = new Todos({ title, text: text ? text : \"\" });\n    return await todo.save();\n  },\n  deleteTodo: async ({ id }) => {\n    return await Todos.findByIdAndDelete(id);\n  },\n  editTodo: async ({ id, title, text }) => {\n    return await Todos.findByIdAndUpdate(id, { title, text }, { new: true });\n  },\n};\n\nexport default root;\n","import { buildSchema } from \"graphql\";\n\nvar schema = buildSchema(`\n  type Todo {\n    id:ID!\n    title: String!\n    text: String!\n  }\n\n  type Query {\n    todo(id: ID!): Todo\n    allTodos: [Todo!]!\n  }\n\n  type Mutation {\n    addTodo(title: String!, text: String): Todo!\n    deleteTodo(id: ID!): Todo!\n    editTodo(id: ID!, title: String!, text: String!): Todo! \n  }\n`);\n\nexport default schema;\n","module.exports = require(\"express\");;","module.exports = require(\"express-graphql\");;","module.exports = require(\"graphql\");;","module.exports = require(\"mongoose\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from \"express\";\nimport { graphqlHTTP } from \"express-graphql\";\nimport { mongoose } from \"mongoose\";\nimport schema from \"./schema/schema\";\nimport root from \"./resolvers/root\";\n\nconst URL =\n  \"mongodb+srv://artemkons:123@cluster0.9mla7.mongodb.net/todos_db?retryWrites=true&w=majority\";\n\nmongoose.connect(URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false,\n});\nconst dbConnection = mongoose.connection;\ndbConnection.on(\"error\", (err) => console.log(`Connection error ${err}`));\ndbConnection.once(\"open\", () => console.log(\"Connected to DB!\"));\n\nconst app = express();\nconst PORT = 3000;\n\napp.get(\"/\", (req, res) => {\n  res.send(\"Hello World!\");\n});\n\napp.use(\n  \"/api\",\n  graphqlHTTP({\n    schema,\n    rootValue: root,\n    graphiql: true,\n  })\n);\n\napp.listen(PORT, () => {\n  console.log(`Example app listening at http://localhost:${PORT}/api`);\n});\n"],"sourceRoot":""}